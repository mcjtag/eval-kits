/**
 * @file ad9520_map.h
 * @brief AD9520 Register Map
 * @author matyunin.d
 * @date 20.04.2017
 * @copyright MIT License
 */

#ifndef AD9520_MAP_H_
#define AD9520_MAP_H_

#include <stdint.h>

#define AD9520_DIVIDER_PHASE(p)		(0xFF & p)

// AD9520 Register Map
enum AD9520_REGMAP {
// Serial Port Configuration
	AD9520_REG_SERIAL_PORT_CONFIG = 0x000,
	AD9520_REG_PART_ID = 0x003,
	AD9520_REG_READBACK_CONTROL = 0x004,
// EEPROM ID
	AD9520_REG_EEPROM_CUSTOMER_VERSION_ID_LSB = 0x005,
	AD9520_REG_EEPROM_CUSTOMER_VERSION_ID_MSB = 0x006,
// PLL
	AD9520_REG_PFD_CHARGE_PUMP = 0x010,
	AD9520_REG_R_COUNTER_LSB = 0x011,
	AD9520_REG_R_COUNTER_MSB = 0x012,
	AD9520_REG_A_COUNTER = 0x013,
	AD9520_REG_B_COUNTER_LSB = 0x014,
	AD9520_REG_B_COUNTER_MSB = 0x015,
	AD9520_REG_PLL_CTRL_1 = 0x016,
	AD9520_REG_PLL_CTRL_2 =	0x017,
	AD9520_REG_PLL_CTRL_3 = 0x018,
	AD9520_REG_PLL_CTRL_4 = 0x019,
	AD9520_REG_PLL_CTRL_5 = 0x01A,
	AD9520_REG_PLL_CTRL_6 = 0x01B,
	AD9520_REG_PLL_CTRL_7 = 0x01C,
	AD9520_REG_PLL_CTRL_8 = 0x01D,
	AD9520_REG_PLL_CTRL_9 = 0x01E,
	AD9520_REG_PLL_READBACK = 0x01F,
// Output Driver Control
	AD9520_REG_OUT0_CONTROL = 0x0F0,
	AD9520_REG_OUT1_CONTROL = 0x0F1,
	AD9520_REG_OUT2_CONTROL = 0x0F2,
	AD9520_REG_OUT3_CONTROL = 0x0F3,
	AD9520_REG_OUT4_CONTROL = 0x0F4,
	AD9520_REG_OUT5_CONTROL = 0x0F5,
	AD9520_REG_OUT6_CONTROL = 0x0F6,
	AD9520_REG_OUT7_CONTROL = 0x0F7,
	AD9520_REG_OUT8_CONTROL = 0x0F8,
	AD9520_REG_OUT9_CONTROL = 0x0F9,
	AD9520_REG_OUT10_CONTROL = 0x0FA,
	AD9520_REG_OUT11_CONTROL = 0x0FB,
	AD9520_REG_ENABLE_OUTPUT_CSDLD_LSB = 0x0FC,
	AD9520_REG_ENABLE_OUTPUT_CSDLD_MSB = 0x0FD,
// LVPECL Channel Dividers
	AD9520_REG_DIVIDER_0_0 = 0x190,
	AD9520_REG_DIVIDER_0_1 = 0x191,
	AD9520_REG_DIVIDER_0_2 = 0x192,
	AD9520_REG_DIVIDER_1_0 = 0x193,
	AD9520_REG_DIVIDER_1_1 = 0x194,
	AD9520_REG_DIVIDER_1_2 = 0x195,
	AD9520_REG_DIVIDER_2_0 = 0x196,
	AD9520_REG_DIVIDER_2_1 = 0x197,
	AD9520_REG_DIVIDER_2_2 = 0x198,
	AD9520_REG_DIVIDER_3_0 = 0x199,
	AD9520_REG_DIVIDER_3_1 = 0x19A,
	AD9520_REG_DIVIDER_3_2 = 0x19B,
// VCO Divider and CLK Input
	AD9520_REG_VCO_DIVIDER = 0x1E0,
	AD9520_REG_INPUT_CLKS = 0x1E1,
// System
	AD9520_REG_POWERDOWN_SYNC = 0x230,
// Update All Registers
	AD9520_REG_IO_UPDATE = 0x232,
// EEPROM Buffer Segment
	AD9520_REG_EEPROM_SERIAL_PORT_CONFIG = 0xA00,
	AD9520_REG_EEPROM_CUSTOMER_VERSION_ID = 0xA03,
	AD9520_REG_EEPROM_PLL_SETTINGS = 0xA06,
	AD9520_REG_EEPROM_OUTPUT_DRIVER_CONTROL = 0xA09,
	AD9520_REG_EEPROM_LVPECL_CHANNEL_DIVIDERS = 0xA0C,
	AD9520_REG_EEPROM_VCO_DIVIDER_CLK_INPUT = 0xA0F,
	AD9520_REG_EEPROM_POWERDOWN_SYNC = 0xA12,
	AD9520_REG_EEPROM_IO_UPDATE = 0xA15,
	AD9520_REG_EEPROM_END_OF_DATA = 0xA16,
// EEPROM Control
	AD9520_REG_EEPROM_STATUS = 0xB00,
	AD9520_REG_EEPROM_ERROR_CHECK = 0xB01,
	AD9520_REG_EEPROM_CONTROL_1 = 0xB02,
	AD9520_REG_EEPROM_CONTROL_2 = 0xB03
};

enum AD9520_SERIAL_PORT_CONFIG_MSK {
	AD9520_SDO_ACTIVE = 0x81,
	AD9520_LSB_FIRST_ADDR_INC = 0x42,
	AD9520_SOFT_RESET = 0x24,
};

enum AD9520_SERIAL_PORT_CONFIG {
	AD9520_SDO_ACTIVE_SDO_SDIO = 0x81,
	AD9520_SDO_ACTIVE_SDIO_ONLY = 0x00,
	AD9520_LSB_FIRST_ADDR_INC_LSB_INC = 0x42,
	AD9520_LSB_FIRST_ADDR_INC_MSB_DEC = 0x00,
	AD9520_SOFT_RESET_ON = 0x24,
	AD9520_SOFT_RESET_OFF = 0x00
};

enum AD9520_PART_ID {
	AD9520_0 = 0x20,
	AD9520_1 = 0x60,
	AD9520_2 = 0xA0,
	AD9520_3 = 0x61,
	AD9520_4 = 0xE1,
	AD9520_5 = 0xE0,
};

enum AD9520_READBACK_CONTROL_MSK {
	AD9520_READBACK = 0x01
};

enum AD9520_READBACK_CONTROL {
	AD9520_READBACK_ACTIVE = 0x01,
	AD9520_READBACK_BUFFER = 0x00
};

enum AD9520_PFD_CHARGE_PUMP_MSK {
	AD9520_PFD_POLARITY = 0x80,
	AD9520_CP_CURRENT = 0x70,
	AD9520_CP_MODE = 0x0C,
	AD9520_PLL_POWERDOWN = 0x03
};

enum AD9520_PFD_CHARGE_PUMP {
	AD9520_PFD_POLARITY_POSITIVE = 0x00,
	AD9520_PFD_POLARITY_NEGATIVE = 0x80,
	AD9520_CP_CURRENT_06 = 0x00,
	AD9520_CP_CURRENT_12 = 0x10,
	AD9520_CP_CURRENT_18 = 0x20,
	AD9520_CP_CURRENT_24 = 0x30,
	AD9520_CP_CURRNET_30 = 0x40,
	AD9520_CP_CURRENT_36 = 0x50,
	AD9520_CP_CURRENT_42 = 0x60,
	AD9520_CP_CURRENT_48 = 0x70,
	AD9520_CP_MODE_HIGH = 0x00,
	AD9520_CP_MODE_PUMP_UP = 0x04,
	AD9520_CP_MODE_PUMP_DOWN = 0x08,
	AD9520_CP_MODE_NORMAL = 0x0C,
	AD9520_PLL_POWERDOWN_NORMAL = 0x00,
	AD9520_PLL_POWERDOWN_ASYNC = 0x01,
	AD9520_PLL_POWERDOWN_SYNC = 0x03
};

enum AD9520_OUT_CONTROL_MSK {
	AD9520_OUT_CONTROL_FORMAT = 0x80,
	AD9520_OUT_CONTROL_CMOS_CONF = 0x60,
	AD9520_OUT_CONTROL_POLARITY = 0x18,
	AD9520_OUT_CONTROL_LVPECL_DIFF_VOLT = 0x06,
	AD9520_OUT_CONTROL_LVPECL_POWERDOWN = 0x01
};

enum AD9520_OUT_CONTROL {
	AD9520_OUT_CONTROL_FORMAT_LVPECL = 0x00,
	AD9520_OUT_CONTROL_FORMAT_CMOS = 0x80,
	AD9520_OUT_CONTROL_CMOS_CONF_A_TRI_B_TRI = 0x00,
	AD9520_OUT_CONTROL_CMOS_CONF_A_ON_B_TRI = 0x20,
	AD9520_OUT_CONTROL_CMOS_CONF_A_TRI_B_ON = 0x40,
	AD9520_OUT_CONTROL_CMOS_CONF_A_ON_B_ON = 0x60,
	AD9520_OUT_CONTROL_POLARITY_A_NOT_B = 0x10,
	AD9520_OUT_CONTROL_POLARITY_B_NOT_A = 0x18,
	AD9520_OUT_CONTROL_POLARITY_A_B = 0x00,
	AD9520_OUT_CONTROL_POLARITY_NOT_A_NOT_B = 0x08,
	AD9520_OUT_CONTROL_LVPECL_DIFF_VOLT_400 = 0x00,
	AD9520_OUT_CONTROL_LVPECL_DIFF_VOLT_600 = 0x02,
	AD9520_OUT_CONTROL_LVPECL_DIFF_VOLT_780 = 0x04,
	AD9520_OUT_CONTROL_LVPECL_DIFF_VOLT_960 = 0x06,
	AD9520_OUT_CONTROL_LVPECL_POWERDOWN_NORMAL = 0x00,
	AD9520_OUT_CONTROL_LVPECL_POWERDOWN_POWER_SAFE = 0x01
};

enum AD9520_REG_DIVIDER_X_0_MSK {
	AD9520_REG_DIVIDER_X_0_LO_CYCLES = 0xF0,
	AD9520_REG_DIVIDER_X_0_HI_CYCLES = 0x0F
};

enum AD9520_REG_DIVIDER_X_1_MSK {
	AD9520_REG_DIVIDER_X_1_BYPASS = 0x80,
	AD9520_REG_DIVIDER_X_1_IGNORE_SYNC = 0x40,
	AD9520_REG_DIVIDER_X_1_FORCE_HIGH = 0x20,
	AD9520_REG_DIVIDER_X_1_FORSE_START = 0x10,
	AD9520_REG_DIVIDER_X_1_PH_OFFSET = 0x0F
};

enum AD9520_REG_DIVIDER_X_2_MSK {
	AD9520_REG_DIVIDER_X_2_POWER_DOWN = 0x04,
	AD9520_REG_DIVIDER_X_2_DIRECT_TO_OUT = 0x02,
	AD9520_REG_DIVIDER_X_2_DISABLE_DCC = 0x01
};

enum AD9520_REG_DIVIDER_X_1 {
	AD9520_REG_DIVIDER_X_1_BYPASS_DISABLE = 0x00,
	AD9520_REG_DIVIDER_X_1_BYPASS_ENABLE = 0x80,
	AD9520_REG_DIVIDER_X_1_IGNORE_SYNC_OBEY = 0x00,
	AD9520_REG_DIVIDER_X_1_IGNORE_SYNC_IGNORES = 0x40,
	AD9520_REG_DIVIDER_X_1_FORCE_HIGH_LOW = 0x00,
	AD9520_REG_DIVIDER_X_1_FORCE_HIGH_USER = 0x20,
	AD9520_REG_DIVIDER_X_1_FORSE_START_LOW = 0x00,
	AD9520_REG_DIVIDER_X_1_FORSE_START_HIGH = 0x10
};

enum AD9520_REG_DIVIDER_X_2 {
	AD9520_REG_DIVIDER_X_2_POWER_DOWN_DISABLE = 0x00,
	AD9520_REG_DIVIDER_X_2_POWER_DOWN_ENABLE = 0x04,
	AD9520_REG_DIVIDER_X_2_DIRECT_TO_OUT_DISABLE = 0x00,
	AD9520_REG_DIVIDER_X_2_DIRECT_TO_OUT_ENABLE = 0x02,
	AD9520_REG_DIVIDER_X_2_DISABLE_DCC_ENABLE = 0x00,
	AD9520_REG_DIVIDER_X_2_DISABLE_DCC_DISABLE = 0x01
};

enum AD9520_INPUT_CLKS_MSK {
	AD9520_INPUT_CLKS_CLOCK = 0x10,
	AD9520_INPUT_CLKS_VCO = 0x08,
	AD9520_INPUT_CLKS_CLOCK_VCO = 0x04,
	AD9520_INPUT_CLKS_SELECT = 0x02,
	AD9520_INPUT_CLKS_VCO_BYPASS = 0x01
};

enum AD9520_INPUT_CLKS {
	AD9520_INPUT_CLKS_CLOCK_NORMAL = 0x00,
	AD9520_INPUT_CLKS_CLOCK_POWERDOWN = 0x10,
	AD9520_INPUT_CLKS_VCO_NORMAL = 0x00,
	AD9520_INPUT_CLKS_VCO_POWERDOWN = 0x08,
	AD9520_INPUT_CLKS_CLOCK_VCO_NORMAL = 0x00,
	AD9520_INPUT_CLKS_CLOCK_VCO_POWERDOWN = 0x04,
	AD9520_INPUT_CLKS_SELECT_CLOCK = 0x00,
	AD9520_INPUT_CLKS_SELECT_VCO = 0x02,
	AD9520_INPUT_CLKS_VCO_BYPASS_DISABLE = 0x00,
	AD9520_INPUT_CLKS_VCO_BYPASS_ENABLE = 0x01
};

enum AD9520_IO_UPDATE {
	AD9520_IO_UPDATE_UPDATE = 0x01
};

//enum AD9520_PLL_CTRL_1 {
//	AD9520_SET_CP_VCP2 = 0x80,
//	AD9520_RESET_R_COUNTER = 0x40,
//	AD9520_RESET_A_B_COUNTERS = 0x20,
//	AD9520_RESET_ALL_COUNTERS = 0x10,
//	AD9520_B_COUNTER_BYPASS = 0x08,
//	AD9520_PRESCALER_P = 0x07,
//	AD9520_PRESCALER_P_DIV1 = 0x00,
//	AD9520_PRESCALER_P_DIV2 = 0x01,
//	AD9520_PRESCALER_P_DIV2_DIV3 = 0x02,
//	AD9520_PRESCALER_P_DIV4_DIV5 = 0x03,
//	AD9520_PRESCALER_P_DIV8_DIV9 = 0x04,
//	AD9520_PRESCALER_P_DIV16_DIV17 = 0x05,
//	AD9520_PRESCALRE_P_DIV32_DIV33 = 0x06,
//	AD9520_PRESCALER_P_DIV3 = 0x07
//};
//
//enum AD9520_PLL_CTRL_2 {
//	AD9520_STATUS_PIN = 0xFC,
//	AD9520_STATUS_PIN_GROUND = 0x00,
//	AD9520_STATUS_PIN_N_DIV = 0x04,
//	AD9520_STATUS_PIN_R_DIV = 0x08,
//	AD9520_STATUS_PIN_A_DIV = 0x0C,
//	AD9520_STATUS_PIN_PRESCALER = 0x10,
//	AD9520_STATUS_PIN_PFD_UP = 0x14,
//	AD9520_STATUS_PIN_PFD_DOWN = 0x18,
//	AD9520_STATUS_PIN_REF1_CLOCK = 0x84,
//	AD9520_STATUS_PIN_REF2_CLOCK = 0x88,
//	AD9520_STATUS_PIN_SEL_REF_PLL = 0x8C,
//	AD9520_STATUS_PIN_UNSEL_REF_PLL = 0x90,
//	AD9520_STATUS_PIN_SEL_REF_ACTIVE_HIGH = 0x94,
//	AD9520_STATUS_PIN_UNSEL_REF_ACTIVE_HIGH = 0x98,
//	AD9520_STATUS_PIN_REF1_FREQ_ACTIVE_HIGH = 0x9C,
//	AD9520_STATUS_PIN_REF2_FREQ_ACTIVE_HIGH = 0xA0,
//	AD9520_STATUS_PIN_REF1_AND_REF2_FREQ = 0xA4,
//	AD9520_STATUS_PIN_DLD_AND_SEL_REF_AND_VCO = 0xA8,
//	AD9520_STATUS_PIN_VCO_FREQ_ACTIVE_HIGH = 0xAC,
//	AD9520_STATUS_PIN_LOW_REF1_HIGH_REF2 = 0xB0,
//	AD9520_STATUS_PIN_DLD_ACTIVE_HIGH = 0xB4,
//	AD9520_STATUS_PIN_HOLDOVER_ACTIVE_HIGH = 0xB8,
//	AD9520_STATUS_PIN_VS_PLL = 0xC0,
//	AD9520_STATUS_PIN_NOT_REF1_CLOCK = 0xC4,
//	AD9520_STATUS_PIN_NOT_REF2_CLOCK = 0xC8,
//	AD9520_STATUS_PIN_NOT_SEL_REF_PLL = 0xCC,
//	AD9520_STATUS_PIN_NOT_UNSEL_REF_PLL = 0xD0,
//	AD9520_STATUS_PIN_SEL_REF_ACTIVE_LOW = 0xD4,
//	AD9520_STATUS_PIN_UNSEL_REF_ACTIVE_LOW = 0xD8,
//	AD9520_STATUS_PIN_REF1_FREQ_ACTIVE_HIGH = 0xDC,
//	AD9520_STATUS_PIN_REF2_FREQ_ACTIVE_HIGH = 0xE0,
//	AD9520_STATUS_PIN_NOT_REF1_AND_REF2_FREQ = 0xE4,
//	AD9520_STATUS_PIN_NOT_DLD_AND_SEL_REF_AND_VCO = 0xE8,
//	AD9520_STATUS_PIN_VCO_FREQ_ACTIVE_LOW = 0xEC,
//	AD9520_STATUS_PIN_LOW_REF2_HIGH_REF1 = 0xF0,
//	AD9520_STATUS_PIN_DLD_ACTIVE_LOW = 0xF4,
//	AD9520_STATUS_PIN_HOLDOVER_ACTIVE_LOW = 0xF8,
//	AD9520_ANTIBACKLASH_PULSE_WIDTH = 0x03,
//	AD9520_ANTIBACKLASH_PULSE_WIDTH_29 = 0x00,
//	AD9520_ANTIBACKLASH_PULSE_WIDTH_13 = 0x01,
//	AD9520_ANTIBACKLASH_PULSE_WIDTH_60 = 0x02,
//	AD9520_ANTIBACKLASH_PULSE_WIDTH_29 = 0x03
//};
//
//enum AD9520_PLL_CTRL_3 {
//	AD9520_CMOS_REF_INPUT_DC_OFFSET_ENABLE = 0x80,
//	AD9520_LOCK_DETECT_COUNTER = 0x60,
//	AD9520_LOCK_DETECT_COUNTER_5 = 0x00,
//	AD9520_LOCK_DETECT_COUNTER_16 = 0x20,
//	AD9520_LOCK_DETECT_COUNTER_64 = 0x40,
//	AD9520_LOCK_DETECT_COUNTER_255 = 0x60,
//	AD9520_DIGITAL_LOCK_WINDOW_LOW_RANGE = 0x10,
//	AD9520_DIGITAL_LOCK_WINDOW_DISABLE = 0x80,
//	AD9520_VCO_CALIBRATION_DIV = 0x06,
//	AD9520_VCO_CALIBRATION_DIV_2 = 0x00,
//	AD9520_VCO_CALIBRATION_DIV_4 = 0x02,
//	AD9520_VCO_CALIBRATION_DIV_8 = 0x04,
//	AD9520_VCO_CALIBRATION_DIV_16 = 0x06,
//	AD9520_VCO_CALIBRATION_NOW = 0x01
//};

#endif /* AD9520_MAP_H_ */
